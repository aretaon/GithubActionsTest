name: Python package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: https://github.com/actions/checkout@v3
      - name: Set up R
        uses: https://github.com/r-lib/actions/setup-r@v2
        with:
            r-version: '4.2.1' # The R version to download (if necessary) and use.
      - name: Set up R with r2u CRAN as Ubuntu Binaries
        run: |
          ## First: update apt and get keys
          apt update -qq && apt install --yes --no-install-recommends wget ca-certificates gnupg
          wget -q -O- https://eddelbuettel.github.io/r2u/assets/dirk_eddelbuettel_key.asc \
              | tee -a /etc/apt/trusted.gpg.d/cranapt_key.asc
          echo "deb [arch=amd64] https://r2u.stat.illinois.edu/ubuntu jammy main" > /etc/apt/sources.list.d/cranapt.list
          apt update
          wget -q -O- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc \
              | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
          echo "deb [arch=amd64] https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/" > /etc/apt/sources.list.d/cran_r.list
          apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 67C2D66C4B1D4339 51716619E084DAB9
          apt update -qq
          DEBIAN_FRONTEND=noninteractive apt install --yes --no-install-recommends r-base-core
          echo "Package: *" > /etc/apt/preferences.d/99cranapt
          echo "Pin: release o=CRAN-Apt Project" >> /etc/apt/preferences.d/99cranapt
          echo "Pin: release l=CRAN-Apt Packages" >> /etc/apt/preferences.d/99cranapt
          echo "Pin-Priority: 700"  >> /etc/apt/preferences.d/99cranapt
          apt install --yes --no-install-recommends python3-{dbus,gi,apt}
          Rscript -e 'install.packages("bspm", repos="https://ftp.fau.de/cran/")'
          RHOME=$(R RHOME)
          echo "suppressMessages(bspm::enable())" >> ${RHOME}/etc/Rprofile.site
          echo "options(bspm.version.check=FALSE)" >> ${RHOME}/etc/Rprofile.site
      - name: Install CRAN packages through apt
        run: |
          sudo R -q -e 'install.packages("tmvtnorm")'
      - name: Set up Python
        uses: https://github.com/actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
                    pip install ruff pytest
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Generate R.conf
        run: |
          sudo apt-get install -y tree
          pwd
          tree
          PATH_TO_RSCRIPT=$(which Rscript)
          RFUNCTIONS=$(realpath mypackage/RFunctions.R)
          echo -e "R = $PATH_TO_RSCRIPT\nRFUNCTIONS = $RFUNCTIONS" > mypackage/R.conf
          cat mypackage/R.conf
      - name: Check R install
        run: |
          python -c "from mypackage import r_helper; r_helper.return_r_path()"
          Rscript mypackage/RFunctions.R
      - name: Build docs
        uses: https://github.com/uibcdf/action-sphinx-docs-to-gh-pages@v2.0.0
        with:
          branch: main
          dir_docs: docsrc
      - name: Test with pytest
        run: |
          mkdir -p tests/badges
          pytest -s --verbose -p no:cacheprovider tests
          ls -ltprah tests
          ls -ltprah tests/badges
        env:
          GITHUB_PAT_GITHUB_COM: ${{ secrets.API_TOKEN_GITHUB }}
      - name: Remove gitignore
        run: |
          rm .gitignore
      - name: Rewrite history
        run: |
          git config user.name "Gitea Actions"
          git config user.email "gitea@bc2-silicon.biozentrum.uni-wuerzburg.de"
          git checkout -b badges
          git add .
          git commit -m 'Updated badges'
          git filter-branch --prune-empty --subdirectory-filter tests/badges/ badges
          git push --force origin badges